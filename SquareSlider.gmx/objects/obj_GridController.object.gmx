<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CMD</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//fill the screen with squares
for(i = global.missingRows; i &lt; global.rows; i +=1)
{
    for(j = global.missingCols; j &lt; global.columns; j +=1)
    {
        squareX = ((global.squareWidth + (global.squareSpaceX))* j) + global.displayStartX + (global.squareSpaceX)
        squareY = ((global.squareHeight + (global.squareSpaceY))* i) + global.displayStartY + (global.squareSpaceY)
        instance_create(squareX, squareY, obj_SquareStd);
    } 
}
//alarm[0] = 200;

mouse_xPrevious = mouse_x;
mouse_yPrevious = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i = 0; i &lt; global.columns; i +=1)
{
    squareX = ((global.squareWidth + (global.squareSpaceX))* i) + global.displayStartX + (global.squareSpaceX/2)
    squareY = -100//((global.squareHeight + (global.squareSpaceY))* i) + global.displayStartY + (global.squareSpaceY/2)
    instance_create(squareX, squareY, obj_SquareStd);
} 
alarm[0] = 200
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_xPrevious = mouse_x;
mouse_yPrevious = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Click and select a square to move.
if (mouse_check_button_pressed(mb_left))
    with (collision_point(mouse_x,mouse_y,obj_SquareStd,false,true)) {
        show_debug_message("collided");
        global.mouseIsPressed = true;
        
        //sets the mouse row and column to move
        if (global.mouseRow = 0)
            global.mouseRow = scr_findRow(mouse_y);
            //show_debug_message(scr_findRow(mouse_y));
        if (global.mouseCol = 0)
            global.mouseCol = scr_findColumn(mouse_x);
        
        //sets initial mouse position to the current mouse position (fixed on the clicked block);
        if (global.initMouseX == -1) {
            global.initMouseX = x + global.squareWidth / 2; }
        if (global.initMouseY == -1) {
            global.initMouseY = y + global.squareHeight / 2; }
    }


//set and update moving direction
if (global.mouseIsPressed == true) 
{
    if (global.moveY = false) 
    {
        if (global.mouseRow!=scr_findRow(mouse_y)) 
        {
            with (obj_SquareStd) {
                scr_alignX(); 
                initialX = 0;
                initialY = 0; }
            global.mouseCol = scr_findColumn(mouse_x);
            global.moveX = false;
            global.moveY = true; 
            global.initMouseX = scr_findX(scr_findColumn(mouse_xPrevious)-1) 
                + global.squareWidth / 2;
            global.initMouseY = scr_findY(scr_findRow(mouse_yPrevious) - 1)
                + global.squareHeight / 2;

        
        } 
    }
    if (global.moveX = false) 
    {
        global.mouseRow = scr_findRow(mouse_y);
        if (global.mouseCol!=scr_findColumn(mouse_x)) 
        {
            with (obj_SquareStd) {
                scr_alignY();
                initialX = 0;
                initialY = 0; }
            global.moveX = true;
            global.moveY = false; 
            
            global.initMouseX = scr_findX(scr_findColumn(mouse_xPrevious)-1) 
                + global.squareWidth / 2;
            global.initMouseY = scr_findY(scr_findRow(mouse_yPrevious) - 1)
                + global.squareHeight / 2;

        } 
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//destroy blocks
if (global.mouseIsPressed == false) {
    scr_destroyHorizontally()
    scr_destroyVertically()
}

//show_debug_message("mouse x " + string(scr_findColumn(mouse_x)));
//show_debug_message("mouse y " + string(scr_findRow(mouse_y)));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.breakpoint = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
