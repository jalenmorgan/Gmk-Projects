<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>castleBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-472</depth>
  <persistent>0</persistent>
  <parentName>towerParent</parentName>
  <maskName>building_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables specific to the castle
shoot_time = 40;
sprite_index = castle;
hearts = global.castle_health
extra_arrow = false

//inherit and create basic variables
event_inherited();




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//make generic variables.
show_debug_message('castle released');
event_inherited();

//shoot initial arrow (accurate)
var arrow = instance_create(x,y,obj_arrow);
if (level == 3 or level == 5)
    arrow.fire = true;
else 
    arrow.fire = false;
arrow.direction = arrow_direction;
arrow.speed = 13;
    
//decide how many extra arrows    
extra_arrow_count = 0
if (extra_arrow == true) extra_arrow_count += 1
if (level == 2 or level == 5) extra_arrow_count += 1
if (level == 4) extra_arrow_count += 2

//shoot extra arrows (inaccurate)
repeat (extra_arrow_count) { 
    arrow = instance_create(x,y,obj_arrow);
    if (level == 3 or level == 5)
        arrow.fire = true;
    else 
        fire = false;
    arrow.direction = arrow_direction -20 + random(40);
    arrow.speed = 13; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw then draw on top.
tower_draw(h_archer_1);
draw_sprite(sprite_index,1,x,y)

//debugging
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
